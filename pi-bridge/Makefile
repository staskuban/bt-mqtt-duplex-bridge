# Makefile –¥–ª—è ELM327 Bridge

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
APP_NAME=elm327-bridge
DOCKER_IMAGE=elm327-bridge:latest
GO_FILES=$(shell find . -name "*.go" -not -path "./vendor/*")

# –¶–µ–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
.PHONY: help build test clean docker-build docker-run install deploy

# –°–ø—Ä–∞–≤–∫–∞
help:
	@echo "üöó ELM327 Bridge - –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@echo ""
	@echo "–°–±–æ—Ä–∫–∞:"
	@echo "  build      - –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ–∫—É—â–µ–π –û–°"
	@echo "  build-pi   - –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è Raspberry Pi (linux/arm64)"
	@echo "  test       - –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"
	@echo "  clean      - –û—á–∏—Å—Ç–∫–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ —Å–±–æ—Ä–∫–∏"
	@echo ""
	@echo "Docker:"
	@echo "  docker-build  - –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞"
	@echo "  docker-run    - –ó–∞–ø—É—Å–∫ –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ"
	@echo "  docker-stop   - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
	@echo ""
	@echo "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ:"
	@echo "  install    - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ Raspberry Pi"
	@echo "  deploy     - –ü–æ–ª–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —Å Docker"
	@echo ""
	@echo "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞:"
	@echo "  fmt        - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞"
	@echo "  vet        - –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∫–æ–¥–∞"
	@echo "  lint       - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª—è –∫–æ–¥–∞"

# –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
build: $(GO_FILES)
	@echo "üî® –°–±–æ—Ä–∫–∞ $(APP_NAME)..."
	@go mod tidy
	@go build -o $(APP_NAME) .
	@echo "‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: $(APP_NAME)"

# –°–±–æ—Ä–∫–∞ –¥–ª—è Raspberry Pi (ARM64)
build-pi: $(GO_FILES)
	@echo "üî® –°–±–æ—Ä–∫–∞ $(APP_NAME) –¥–ª—è Raspberry Pi (linux/arm64)..."
	@go mod tidy
	@env GOOS=linux GOARCH=arm64 go build -o $(APP_NAME) .
	@echo "‚úÖ –°–±–æ—Ä–∫–∞ –¥–ª—è Raspberry Pi –∑–∞–≤–µ—Ä—à–µ–Ω–∞: $(APP_NAME)"

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
test:
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
	@go test -v ./...

# –û—á–∏—Å—Ç–∫–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
clean:
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤..."
	@rm -f $(APP_NAME)
	@go clean
	@echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞
fmt:
	@echo "üíÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞..."
	@gofmt -w $(GO_FILES)
	@echo "‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"

# –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑
vet:
	@echo "üîç –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∫–æ–¥–∞..."
	@go vet ./...
	@echo "‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª—è –∫–æ–¥–∞
lint:
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª—è –∫–æ–¥–∞..."
	@golangci-lint run
	@echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞
docker-build:
	@echo "üê≥ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..."
	@docker build -t $(DOCKER_IMAGE) .
	@echo "‚úÖ Docker –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω: $(DOCKER_IMAGE)"

# –ó–∞–ø—É—Å–∫ –≤ Docker
docker-run:
	@echo "üöÄ –ó–∞–ø—É—Å–∫ –≤ Docker..."
	@docker-compose up -d
	@echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –≤ Docker"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
docker-stop:
	@echo "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
	@docker-compose down
	@echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

# –ü–æ–ª–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —Å Docker
deploy: docker-build docker-run
	@echo "üöÄ –ü–æ–ª–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
	@echo ""
	@echo "–î–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–∏—Å–∞–º:"
	@echo "  - MQTT –±—Ä–æ–∫–µ—Ä: http://localhost:1883"
	@echo "  - Bridge –ª–æ–≥–∏: docker-compose logs -f elm327-bridge"
	@echo "  - MQTT –ª–æ–≥–∏:   docker-compose logs -f mosquitto"

# –î–µ–ø–ª–æ–π –Ω–∞ Raspberry Pi —á–µ—Ä–µ–∑ SCP
deploy-pi: build-pi
	@echo "üöÄ –î–µ–ø–ª–æ–π –Ω–∞ Raspberry Pi..."
	@echo "üì¶ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∏–Ω–∞—Ä–Ω–æ–≥–æ —Ñ–∞–π–ª–∞..."
	@scp -i ~/.ssh/id_rsa elm327-bridge user@192.168.28.190:/home/user/elm327/
	@echo "üîß –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
	@scp -i ~/.ssh/id_rsa config.example.yaml user@192.168.28.190:/home/user/elm327/config.yaml
	@echo "üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤..."
	@scp -i ~/.ssh/id_rsa setup.sh user@192.168.28.190:/home/user/elm327/
	@ssh -i ~/.ssh/id_rsa user@192.168.28.190 "chmod +x /home/user/elm327/setup.sh"
	@echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
	@echo ""
	@echo "–ù–∞ Raspberry Pi –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
	@echo "  cd /home/user/elm327"
	@echo "  ./setup.sh"

# –î–µ–ø–ª–æ–π —Å –ø–µ—Ä–µ—Å–±–æ—Ä–∫–æ–π
deploy-pi-full: clean deploy-pi
	@echo "üîÑ –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π —Å –ø–µ—Ä–µ—Å–±–æ—Ä–∫–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"

# –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞ —Å Raspberry Pi
sync-pi:
	@echo "üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞ —Å Raspberry Pi..."
	@rsync -avz --exclude='.git' --exclude='*.log' --exclude='elm327-bridge' -e "ssh -i ~/.ssh/id_rsa" . user@192.168.28.190:/home/user/elm327/
	@echo "‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –Ω–∞ Raspberry Pi
install-pi: deploy-pi
	@echo "‚öôÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –Ω–∞ Raspberry Pi..."
	@ssh -i ~/.ssh/id_rsa user@192.168.28.190 "cd /home/user/elm327 && ./setup.sh"
	@echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ Raspberry Pi
install: build
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ Raspberry Pi..."
	@sudo cp $(APP_NAME) /usr/local/bin/
	@sudo cp config.example.yaml /etc/elm327-bridge.yaml
	@echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
	@echo ""
	@echo "–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
	@echo "  sudo nano /etc/elm327-bridge.yaml"
	@echo "  sudo systemctl enable elm327-bridge"
	@echo "  sudo systemctl start elm327-bridge"

# –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
check: fmt vet test
	@echo "‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã"

# –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å –∞–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–æ–π
dev:
	@echo "üîÑ –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	@air

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
deps:
	@echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
	@go mod verify
	@echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
update-deps:
	@echo "‚¨ÜÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
	@go get -u ./...
	@go mod tidy
	@echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã"

# –ê–Ω–∞–ª–∏–∑ –ø–æ–∫—Ä—ã—Ç–∏—è —Ç–µ—Å—Ç–∞–º–∏
coverage:
	@echo "üìä –ê–Ω–∞–ª–∏–∑ –ø–æ–∫—Ä—ã—Ç–∏—è —Ç–µ—Å—Ç–∞–º–∏..."
	@go test -coverprofile=coverage.out ./...
	@go tool cover -html=coverage.out -o coverage.html
	@echo "‚úÖ –û—Ç—á–µ—Ç –ø–æ–∫—Ä—ã—Ç–∏—è —Å–æ–∑–¥–∞–Ω: coverage.html"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
tools:
	@echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	@go install github.com/cosmtrek/air@latest
	@go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
	@echo "‚úÖ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞
status:
	@echo "üìä –°—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞:"
	@echo "  Go –≤–µ—Ä—Å–∏–∏: $$(go version)"
	@echo "  –ú–æ–¥—É–ª–∏: $$(go list -m)"
	@echo "  –§–∞–π–ª—ã Go: $$(find . -name "*.go" | wc -l)"
	@echo "  –¢–µ—Å—Ç—ã: $$(find . -name "*_test.go" | wc -l)"
	@echo "  –†–∞–∑–º–µ—Ä –±–∏–Ω–∞—Ä–Ω–∏–∫–∞: $$(du -h $(APP_NAME) 2>/dev/null | cut -f1 || echo "–Ω–µ —Å–æ–±—Ä–∞–Ω")"
	@echo "  –†–∞–∑–º–µ—Ä –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞: $$(du -sh . 2>/dev/null | cut -f1 || echo "–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω")"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é
ready:
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é..."
	@if [ ! -f "$(APP_NAME)" ]; then \
		echo "‚ùå –ë–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –í—ã–ø–æ–ª–Ω–∏—Ç–µ 'make build'"; \
		exit 1; \
	fi
	@if [ ! -f "config.yaml" ]; then \
		echo "‚ùå –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ config.example.yaml –≤ config.yaml"; \
		exit 1; \
	fi
	@echo "‚úÖ –ì–æ—Ç–æ–≤ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é!"
	@echo "üì¶ –†–∞–∑–º–µ—Ä –±–∏–Ω–∞—Ä–Ω–∏–∫–∞: $$(du -h $(APP_NAME) | cut -f1)"
	@echo "üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: config.yaml"
	@echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–µ–ø–ª–æ—è:"
	@echo "   make deploy-pi      - –î–µ–ø–ª–æ–π –Ω–∞ Raspberry Pi"
	@echo "   make deploy-pi-full - –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏ –¥–µ–ø–ª–æ–π"
	@echo "   make sync-pi        - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞"

# –ë—ã—Å—Ç—Ä–∞—è —Å–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫
quick: build
	@echo "‚ö° –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫..."
	@./$(APP_NAME)

# –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
logs:
	@docker-compose logs -f elm327-bridge

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ MQTT —Å–æ–æ–±—â–µ–Ω–∏–π
monitor-mqtt:
	@echo "üì° –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ MQTT —Å–æ–æ–±—â–µ–Ω–∏–π..."
	@docker run -it --rm --network elm327-network eclipse-mosquitto:2.0 mosquitto_sub -h mosquitto -t "car/telemetry/#" -v

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã
test-command:
	@echo "üß™ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã..."
	@docker run -it --rm --network elm327-network eclipse-mosquitto:2.0 mosquitto_pub -h mosquitto -t "car/command/test/request" -m '{"command":"010C","correlation_id":"test-123","description":"Test RPM query"}'

.DEFAULT_GOAL := help